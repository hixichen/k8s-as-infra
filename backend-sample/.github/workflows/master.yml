name: merge-to-master

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build && Publish Image
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go
      
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Grant git permission
      env:
        TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: git config --global url."https://${TOKEN}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: fmt
      run: go fmt ./...
    
    - name: vendor
      run: go mod download

    - name: go test
      run: go test -cover -race -v ./...
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: backend-sample
        IMAGE_TAG: ${{ github.sha }}
        TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        export STAGE=dev
        export AWS_REPO=$ECR_REGISTRY/$ECR_REPOSITORY
        docker build --build-arg TOKEN=$TOKEN -t $AWS_REPO:$IMAGE_TAG .
        docker tag $AWS_REPO:$IMAGE_TAG $AWS_REPO:$STAGE
        docker push $AWS_REPO:$IMAGE_TAG
        docker push $AWS_REPO:$STAGE
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
